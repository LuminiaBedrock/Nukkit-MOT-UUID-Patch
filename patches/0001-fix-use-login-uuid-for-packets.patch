From 8685910b0be7976c66f6e5f53b74078ef3335afc Mon Sep 17 00:00:00 2001
From: MEFRREEX <mefrreex@gmail.com>
Date: Tue, 8 Apr 2025 23:36:11 +0400
Subject: [PATCH] fix: use login uuid for packets

---
 src/main/java/cn/nukkit/Player.java             | 6 +++---
 src/main/java/cn/nukkit/Server.java             | 8 ++++----
 src/main/java/cn/nukkit/entity/EntityHuman.java | 4 ++--
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/main/java/cn/nukkit/Player.java b/src/main/java/cn/nukkit/Player.java
index 9bfcd60e..c177f70c 100644
--- a/src/main/java/cn/nukkit/Player.java
+++ b/src/main/java/cn/nukkit/Player.java
@@ -873,7 +873,7 @@ public class Player extends EntityHuman implements CommandSender, InventoryHolde
     public void setDisplayName(String displayName) {
         this.displayName = displayName;
         if (this.spawned) {
-            this.server.updatePlayerListData(this.getUniqueId(), this.getId(), this.displayName, this.getSkin(), this.loginChainData.getXUID());
+            this.server.updatePlayerListData(this.getLoginUuid(), this.getId(), this.displayName, this.getSkin(), this.loginChainData.getXUID());
         }
     }
 
@@ -881,7 +881,7 @@ public class Player extends EntityHuman implements CommandSender, InventoryHolde
     public void setSkin(Skin skin) {
         super.setSkin(skin);
         if (this.spawned) {
-            this.server.updatePlayerListData(this.getUniqueId(), this.getId(), this.displayName, skin, this.loginChainData.getXUID());
+            this.server.updatePlayerListData(this.getLoginUuid(), this.getId(), this.displayName, skin, this.loginChainData.getXUID());
         }
     }
 
@@ -5120,7 +5120,7 @@ public class Player extends EntityHuman implements CommandSender, InventoryHolde
         if (this.level.getGameRules().getBoolean(GameRule.SEND_COMMAND_FEEDBACK)) {
             var pk = new CommandOutputPacket();
             pk.messages.addAll(container.getMessages());
-            pk.commandOriginData = new CommandOriginData(CommandOriginData.Origin.PLAYER, this.getUniqueId(), "", null);//Only players can effect
+            pk.commandOriginData = new CommandOriginData(CommandOriginData.Origin.PLAYER, this.getLoginUuid(), "", null);//Only players can effect
             pk.type = CommandOutputType.ALL_OUTPUT;//Useless
             pk.successCount = container.getSuccessCount();//Useless,maybe used for server-client interaction
             this.dataPacket(pk);
diff --git a/src/main/java/cn/nukkit/Server.java b/src/main/java/cn/nukkit/Server.java
index 07226f73..7edf5728 100644
--- a/src/main/java/cn/nukkit/Server.java
+++ b/src/main/java/cn/nukkit/Server.java
@@ -1255,7 +1255,7 @@ public class Server {
 
     public void onPlayerCompleteLoginSequence(Player player) {
         this.playerList.put(player.getUniqueId(), player);
-        this.updatePlayerListData(player.getUniqueId(), player.getId(), player.getDisplayName(), player.getSkin(), player.getLoginChainData().getXUID());
+        this.updatePlayerListData(player.getLoginUuid(), player.getId(), player.getDisplayName(), player.getSkin(), player.getLoginChainData().getXUID());
     }
 
     public void addPlayer(InetSocketAddress socketAddress, Player player) {
@@ -1264,7 +1264,7 @@ public class Server {
 
     public void addOnlinePlayer(Player player) {
         this.playerList.put(player.getUniqueId(), player);
-        this.updatePlayerListData(player.getUniqueId(), player.getId(), player.getDisplayName(), player.getSkin(), player.getLoginChainData().getXUID());
+        this.updatePlayerListData(player.getLoginUuid(), player.getId(), player.getDisplayName(), player.getSkin(), player.getLoginChainData().getXUID());
     }
 
     public void removeOnlinePlayer(Player player) {
@@ -1276,7 +1276,7 @@ public class Server {
 
             PlayerListPacket pk = new PlayerListPacket();
             pk.type = PlayerListPacket.TYPE_REMOVE;
-            pk.entries = new PlayerListPacket.Entry[]{new PlayerListPacket.Entry(player.getUniqueId())};
+            pk.entries = new PlayerListPacket.Entry[]{new PlayerListPacket.Entry(player.getLoginUuid())};
 
             Server.broadcastPacket(this.playerList.values(), pk);
         }
@@ -1332,7 +1332,7 @@ public class Server {
     public void sendFullPlayerListData(Player player) {
         PlayerListPacket.Entry[] array = this.playerList.values().stream()
                 .map(p -> new PlayerListPacket.Entry(
-                        p.getUniqueId(),
+                        p.getLoginUuid(),
                         p.getId(),
                         p.getDisplayName(),
                         p.getSkin(),
diff --git a/src/main/java/cn/nukkit/entity/EntityHuman.java b/src/main/java/cn/nukkit/entity/EntityHuman.java
index 61961e3a..ca003e15 100644
--- a/src/main/java/cn/nukkit/entity/EntityHuman.java
+++ b/src/main/java/cn/nukkit/entity/EntityHuman.java
@@ -326,7 +326,7 @@ public class EntityHuman extends EntityHumanType {
             }
 
             if (this.isPlayer) {
-                this.server.updatePlayerListData(this.uuid, this.getId(), ((Player) this).getDisplayName(), this.skin, ((Player) this).getLoginChainData().getXUID(), new Player[]{player});
+                this.server.updatePlayerListData(this.loginUuid, this.getId(), ((Player) this).getDisplayName(), this.skin, ((Player) this).getLoginChainData().getXUID(), new Player[]{player});
             } else {
                 this.server.updatePlayerListData(this.uuid, this.getId(), this.getName(), this.skin, new Player[]{player});
             }
@@ -334,7 +334,7 @@ public class EntityHuman extends EntityHumanType {
             PlayerInventory playerInventory = Objects.requireNonNullElse(this.inventory, BaseEntity.EMPTY_INVENTORY);
 
             AddPlayerPacket pk = new AddPlayerPacket();
-            pk.uuid = this.uuid;
+            pk.uuid = this.isPlayer ? this.loginUuid : this.uuid;
             pk.username = this.getName();
             pk.entityUniqueId = this.getId();
             pk.entityRuntimeId = this.getId();
-- 
2.48.1.windows.1

